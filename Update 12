#Import the stuff to begin the GUI
from tkinter import *


#Login Screen for GUI
class LoginScreen:
    def __init__(self, master):
        self.master = master
        master.title("Inventory System")


        #Adds text to specify entry
        self.Tuser = Label(master, text="Username:")
        self.Tuser.grid(row=1, column=0)

        #Gives user ability to enter username
        self.user = StringVar()
        self.Iuser = Entry(master, textvariable=self.user)
        self.Iuser.grid(row=1, column=1)

        #Adds text to specify entry
        self.Tpassw = Label(master, text="Password:")
        self.Tpassw.grid(row=2, column=0)

        #Gives user ability to enter password
        self.passw = StringVar()
        self.Ipassw = Entry(master, textvariable=self.passw)
        self.Ipassw.grid(row=2, column=1)

        #Adds an image to the GUI
        #img = PhotoImage(open("Users.txt"))
        #panel = Label(root, image = img)
        #panel.pack(side = "top", fill = "both", expand = "yes")
        #root.mainloop()

        #Button that allows user to login
        loginbutton = Button(master, text="Login", command=lambda: self.Login())
        loginbutton.grid(row=3, column=0)

        #Button that allows user to exit program
        close_button = Button(master, text="Close", command=master.quit)
        close_button.grid(row=3, column=2)

        #Checks to see if username and password are correct
    def Login(self):
            users = open("Users.txt", 'r+')
            user = self.user.get()
            passw = self.passw.get()

            lines = users.readline()

            x = 0
            if user in lines:
                x = x+1

            if passw in lines:
                x = x+1

                if x == 2:
                    self.CreateMainScreen()


                else:
                    self.passwo = Label(self.master, text="INCORRECT")
                    self.passwo.grid(row=4, column=1)
            else:
                self.passwo = Label(self.master, text="INCORRECT")
                self.passwo.grid(row=4, column=1)

            return

        #Closes current window and opens the main window
    def CreateMainScreen(self):
            self.master.withdraw()
            window = Toplevel(root)
            frame = self.MainScreen(window)



        #Main Screen for GUI
    class MainScreen:
            def __init__(self, master):
                self.master = master
                master.title("Inventory System")

                self.search = StringVar()
                self.search = Label(master, text="Search:")
                self.search.grid(row=2, column=1)

                self.SearchFunc = StringVar()
                self.SearchFunc = Entry(master)
                self.SearchFunc.grid(row=2, column=2, columnspan=2)

                self.Search_button = Button(master, text="Search", command=lambda:self.CreateInfoScreen())
                self.Search_button.grid(row=2, column=4)

                #Adds an image to the GUI# MUST FIX
                #img = PhotoImage(open("yes.txt"))
                #panel = Label(root, image = img)
                #panel.pack(side = "bottom", fill = "both", expand = "yes")
                #root.mainloop()

                self.Stock_button = Button(master, text="Stock", command=lambda:self.CreateStockScreen())
                self.Stock_button.grid(row=3, column=1)

                self.Logout_button = Button(master, text="Logout", command=lambda:self.CreateLoginScreen())
                self.Logout_button.grid(row=1, column=1)

                self.close_button = Button(master, text="Close", command=master.quit)
                self.close_button.grid(row=3, column=4)


            def CreateLoginScreen(self):
                    self.master.withdraw()
                    window = Toplevel(root)
                    frame = self.LoginScreen.get(window)


            def CreateInfoScreen(self):
                    self.master.withdraw()
                    window = Toplevel(root)
                    frame = self.InfoScreen.get(window)


            def CreateStockScreen(self):
                    self.master.withdraw()
                    window = Toplevel(root)
                    frame = self.StockScreen.get(window)



    class StockScreen:
            def __init__(self, master):
                self.master = master
                master.title("Inventory System")


                #Adds text to specify entry
                self.TStock = Label(master, text="STOCK")
                self.TStock.grid(row=0, column=1)

                #Adds text to specify entry
                self.TItem = Label(master, text="Item name:")
                self.TItem.grid(row=1, column=0)

                self.Item = StringVar()
                self.IItem = Entry(master, textvariable=self.Item)
                self.IItem.grid(row=1, column=1, columnspan=2)

                #Adds text to specify entry
                self.TDesc = Label(master, text="Description:")
                self.TDesc.grid(row=2, column=0)

                self.Desc = StringVar()
                self.IDesc = Entry(master, textvariable=self.Desc)
                self.IDesc.grid(row=2, column=1, columnspan=2)

                #Adds text to specify entry
                self.TProc = Label(master, text="Procedure Pg. #:")
                self.TProc.grid(row=3, column=0)

                self.Proc = StringVar()
                self.IProc = Entry(master, textvariable=self.Proc)
                self.IProc.grid(row=3, column=1, columnspan=2)

                #Adds text to specify entry
                self.TImg = Label(master, text="Image Directory:")
                self.TImg.grid(row=4, column=0)

                self.Img = StringVar()
                self.IImg = Entry(master, textvariable=self.Img)
                self.IImg.grid(row=4, column=1, columnspan=2)

                #Adds text to specify entry
                self.TCr = Label(master, text="Creator Name:")
                self.TCr.grid(row=5, column=0)

                self.Cr = StringVar()
                self.ICr = Entry(master, textvariable=self.Cr)
                self.ICr.grid(row=5, column=1, columnspan=2)

                #Adds text to specify entry
                self.TDate = Label(master, text="Date Created:")
                self.TDate.grid(row=6, column=0)

                self.Date = StringVar()
                self.Date = Entry(master, textvariable=self.Date)
                self.Date.grid(row=6, column=1, columnspan=2)

                self.login_button = Button(master, text="Enter", command=lambda: self.Stock())
                self.login_button.grid(row=7, column=2)

                self.login_button = Button(master, text="       Logout       ", command=lambda: self.CreateLoginScreen())
                self.login_button.grid(row=0, column=0)

                self.login_button = Button(master, text="Main Screen", command=lambda: self.CreateMainScreen())
                self.login_button.grid(row=0, column=2)

                self.login_button = Button(master, text="Exit", command=master.quit)
                self.login_button.grid(row=7, column=0)

            def Stock(self):
                file = open ("Stock.txt",'r+')
                item = self.Item.get()
                desc = self.Desc.get()
                proc = self.Proc.get()
                img = self.Img.get()
                cr = self.Cr.get()
                date = self.Date.get()
                print(item)
                file.write('[')
                file.write(item)
                file.write(', ')
                file.write(str(desc))
                file.write(', ')
                file.write(str(proc))
                file.write(', ')
                file.write(str(img))
                file.write(', ')
                file.write(str(cr))
                file.write(', ')
                file.write(str(date))
                file.write(']')
                file.write('\n')

            def CreateLoginScreen(self):
                self.master.withdraw()
                self.LoginScreen = Toplevel(root)

            def CreateMainScreen(self):
                self.master.withdraw()
                self.MainScreen = Toplevel(root)



    class InfoScreen:
        def __init__(self, master):
            self.master = master
            master.title("Inventory System")
    
            #Adds text to specify entry
            self.TInfo = Label(master, text="INFO")
            self.TInfo.grid(row=0, column=1)
    
            #Adds text to specify entry
            self.TItem = Label(master, text="Name:")
            self.TItem.grid(row=1, column=0)
    
            #Adds text to specify entry
            self.Item = StringVar()
            self.IItem = Entry(master, textvariable=self.Item)
            self.IItem.grid(row=1, column=1, columnspan=2)
    
            #User toggles this to begin search
            self.Search = Button(master, text='Search', command=self.SearchFunction)
            self.Search.grid(row=1, column=4, columnspan=2)
    
            self.Logout_button = Button(master, text="Logout", command=lambda:self.CreateLoginScreen())
            self.Logout_button.grid(row=0, column=0)
    
            self.Logout_button = Button(master, text=" Order ", command=lambda:self.Order())
            self.Logout_button.grid(row=9, column=0)
    
            #Adds text to specify entry
            self.TName = Label(master, text="Item name:")
            self.TName.grid(row=2, column=0)
    
            #Adds text to specify entry
            self.TDesc = Label(master, text="Description:")
            self.TDesc.grid(row=3, column=0)
    
            #Adds text to specify entry
            self.TProc = Label(master, text="Procedure:")
            self.TProc.grid(row=4, column=0)
    
            #Adds text to specify entry
            self.TImage = Label(master, text="Image")
            self.TImage.grid(row=5, column=0)
    
            #Adds an image to the GUI
            #self.image = PhotoImage(open('Stock.txt'))
            #panel = Label(root, image = self.Image)
            #panel.pack(row=2, column=4, columnspan=3)
            #root.mainloop()
    
            #Adds text to specify entry
            self.TCr = Label(master, text="Creator Name:")
            self.TCr.grid(row=6, column=0)
    
            #Adds text to specify entry
            self.TDate = Label(master, text="Date Created:")
            self.TDate.grid(row=7, column=0)
    
            #Adds text to specify entry
            self.TStock = Label(master, text="Stock Remaining:")
            self.TStock.grid(row=8, column=0)
    
    
    
        def SearchFunction(self):
            file = open ("Stock.txt",'r')
            array = []
    
            Item = self.Item.get()
            if Item == (''):
                print('no')
    
            else:
                for line in file:
                    if Item in line:
                        array = line.split()
    
                        #Assigns the values to the variables
                        Name = array[0]
                        Desc = array[1]
                        Proc = array[2]
                        #self.Image = array[3]
                        Cr = array[4]
                        Date = array[5]
                        number = array[6]
    
                        #Adds name from file
                        self.Name = Label(self.master, text=Name)
                        self.Name.grid(row=2, column=1, columnspan=2)
    
                        #Adds description from file
                        self.Desc = Label(self.master, text=Desc)
                        self.Desc.grid(row=3, column=1, columnspan=2)
    
                        #Adds procedure from file
                        self.Proc = Label(self.master, text=Proc)
                        self.Proc.grid(row=4, column=1, columnspan=2)
    
                        #Adds creator name from file
                        self.Cr = Label(self.master, text=Cr)
                        self.Cr.grid(row=6, column=1, columnspan=2)
    
                        #Adds date from file
                        self.Date = Label(self.master, text=Date)
                        self.Date.grid(row=7, column=1, columnspan=2)
    
                        #Changes the variable 'number' to an integer
                        number = int(number)
    
                        #Sets the UI variable 'Date' to say "In Stock"
                        if number >= 99:
                            self.Date = Label(self.master, text='In Stock')
                            self.Date.grid(row=8, column=1, columnspan=2)
    
                        #Sets the UI variable 'Date' to say "In Stock"
                        if 100 > number >= 50 < 100:
                            self.Date = Label(self.master, text='Running Low')
                            self.Date.grid(row=8, column=1, columnspan=2)
    
                        if 50 > number > 0:
                            self.Date = Label(self.master, text='Desperately Low')
                            self.Date.grid(row=8, column=1, columnspan=2)
    
                        if number == 0:
                            self.Date = Label(self.master, text='Out of Stock')
                            self.Date.grid(row=8, column=1, columnspan=2)
    
                        else:
                            if number > 100:
                                self.Date = Label(self.master, text='Currently Unknown')
                                self.Date.grid(row=8, column=1, columnspan=2)
    
            return
    
        def CreateLoginScreen(self):
            print('hi')
    
        def CreateMainScreen(self):
            print('hi')
    
        def Order(self):
            file = open ("Stock.txt",'a')
            Item = self.Item.get()
            array = []
            if Item == (''):
                print('no')
    
            else:
                for line in file:
                    if Item in line:
                        array = line.split()
                        number = array[6]
                        number = int(number)
                        line1 = line[:-1]
                        line1 = (line1, ' ', number+1)
                        line.strip()
                        file.write(line1)
                def CreateLoginScreen(self):
                    self.master.withdraw()
                    self.LoginScreen = Toplevel(root)
    
                def CreateMainScreen(self):
                    self.master.withdraw()
                    self.MainScreen = Toplevel(root)


root = Tk()
my_gui = LoginScreen(root)
root.mainloop()
